#make include file for building StarSimulation IoSimTestSimple on Felix
# Standard defines:
#CC  	=	g++
CC  	=	mpicc
NVCC  	=	nvcc
FF  	=	gfortran
LD  	=	mpic++
HOMEV	=	..
VPATH	=	$(HOMEV)/include
oDir	=	.
Bin	=	../bin
obj	=	../obj
MYLIBS  =
BASE = /usr/local/dx
incDirs = -I$(BASE)/include  -I$(IOME_HOME)/include  -I/usr/local/include -I/usr/local/cuda/include -I$../include -I/usr/local/cuda/include


LD_FLAGS =	-g

# module load OpenMPI/3.1.4-gcccuda-2019b
#module load gcc cuda openmpi
#export MPI_HOME=/opt/software/builder/developers/libraries/openmpi/4.0.5/1/gcc-8.4.0-cuda-10.2.89
#export CUDA_INSTALL_PATH=/opt/software/builder/developers/compilers/cuda/10.2.89/1/default



MPI_HOME=/opt/software/builder/developers/libraries/openmpi/4.0.5/1/gcc-8.4.0-cuda-10.2.89
CUDA_INSTALL_PATH=/opt/software/builder/developers/compilers/cuda/10.2.89/1/default



GENCODE_SM70    := -gencode arch=compute_70,code=\"sm_70,compute_70\"
GENCODE_FLAGS   := $(GENCODE_SM70)

NVCCFLAGS=-O3 $(GENCODE_FLAGS) -Xcompiler -mcpu=native


#remove comments from following lines to include/link IOME
#IOMELIBS	=	-L$(IOME_HOME)/lib -L$(XERCESCROOT)/lib -L$(XALANCROOT)/lib -lxerces-c -lxalan-c -lxalanMsg  -lm -liogenericsimulation
#MYLIBS = $(IOME_HOME)/lib/libiogenericsimulation.a 
#IOME_INCLUDES = -I$(XERCESCROOT)/include -I$(XALANCROOT)/include
#IOME_C_FLAGS	= -g -Dlinux -DBASE=\"$(BASE)\" -DIO_XERCESCVERSION=xercesc_2_8 -DIO_FORTRAN
#remove comments from  lines above to include/link IOME

#enable printf from inside a kernel
# use -arch=sm_20
#use -DUSE_IOME to enable IOME
#CUDACCFLAGS = --ptxas-options=-v -maxrregcount=32 --device-emulation   -DUSE_REAL -DUSE_SAC -DUSE_SHOCKVISC  -DADIABHYDRO -DUSE_VAC -DD1D -DUSE_IOME -DUSE_USERSOURCE -DUSE_SAC_3D -DUSE_DORDER3
#compiling with  -arch sm_13 enables double precision to be used
CUDACCFLAGS = --ptxas-options=-v $(NVCCFLAGS)  -maxrregcount=32 -DUSE_SAC  -DUSE_MULTIGPU -DUSE_MPI


# Flags - note original had -march=native, which gcc 8.3.0 complains about
#CFLAGS=-std=c99 -O3 -mcpu=native -Wall
CCFLAGS = -DUSE_SAC -DD1D -DUSE_MULTIGPU -DUSE_MPI -std=c99 -O3 -mcpu=native -Wall -Dlinux -DBASE=\"$(BASE)\"  -DIO_FORTRAN $(incDirs) 



LIBS	=	 -L. -L../obj -L../lib -L/usr/local/lib -L${CUDA_INSTALL_PATH}/lib64 -lcudart -lm


#C_FLAGS
#NVC_FLAGS	= -g -Dlinux -DBASE=\"$(BASE)\" -DIO_XERCESCVERSION=xercesc_2_8 -DIO_FORTRAN
#NVC_FLAGS	= -g -Dlinux -DBASE=\"$(BASE)\" 
NVC_FLAGS	= -O4 -Dlinux -DBASE=\"$(BASE)\" 

##C_FLAGS	= -g -Dlinux -DBASE=\"$(BASE)\"  -DIO_FORTRAN $(incDirs) $(IOME_C_FLAGS)
C_FLAGS	= -O3 -Dlinux -DBASE=\"$(BASE)\"  -DIO_FORTRAN $(incDirs) $(IOME_C_FLAGS)



/*SRCS	=\
	IoSimTestSimple.cpp*/

#INCLUDES = ../IoUtils/vec.h ../IoUtils/IoPropertyManager.h

INCLUDES = $(IOME_INLUDES)


BASICEXOBJS	=\
	iosmaug.o\
	hyperdifmomsource1.o\
	hyperdifmomsourcene1.o\
	hyperdifesource1.o\
	hyperdifbsource1.o\
	hyperdifbsourcene1.o\
	hyperdifrhosource1.o\
	hyperdifvisc1.o\
	nushk1.o\
	hyperdifvisc1l.o\
	hyperdifvisc1r.o\
	centdiff1.o\
	centdiff2.o\
	computedervfields.o\
	boundary.o\
	init.o\
	update.o\
        advance.o\
	readwrite.o\
	divb.o

PROCEXOBJS	=\
	gradops_pre.o
